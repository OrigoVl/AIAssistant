import { AppDataSource } from "../data-source";
import { CodeSearchService, CODE_TECHNOLOGIES } from "../search/code-search.service";

async function demoCodeSearch() {
  // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –±–∞–∑—É –¥–∞–Ω–∏—Ö
  await AppDataSource.initialize();
  console.log("üîå –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –ø—ñ–¥–∫–ª—é—á–µ–Ω–∞");

  const codeSearchService = new CodeSearchService();

  console.log("\nüîç ========== –î–ï–ú–û–ù–°–¢–†–ê–¶–Ü–Ø –ö–û–î–û–í–û–ì–û –ü–û–®–£–ö–£ ==========\n");

  // 0. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó –∑–∞–ø–∏—Ç—ñ–≤
  console.log("0Ô∏è‚É£ –í–∞–ª—ñ–¥–∞—Ü—ñ—è –∑–∞–ø–∏—Ç—ñ–≤:");
  const testQueries = [
    "—è–∫ –∑–≤–∞—Ä–∏—Ç–∏ –±–æ—Ä—â?",
    "vue component lifecycle",
    "–ø–æ–≥–æ–¥–∞ –∑–∞–≤—Ç—Ä–∞",
    "typescript interface error",
    "–¥–µ –∫—É–ø–∏—Ç–∏ —Ö–ª—ñ–±",
    "react hooks useState",
    "a" // –∫–æ—Ä–æ—Ç–∫–∏–π –∑–∞–ø–∏—Ç
  ];

  for (const testQuery of testQueries) {
    const validation = codeSearchService.validateQuery(testQuery);
    console.log(`   "${testQuery}" -> ${validation.isTechnical ? '‚úÖ —Ç–µ—Ö–Ω—ñ—á–Ω–∏–π' : '‚ùå –Ω–µ—Ç–µ—Ö–Ω—ñ—á–Ω–∏–π'}`);
    if (validation.warning) {
      console.log(`     ${validation.warning}`);
    }
    if (validation.suggestions && validation.suggestions.length > 0) {
      console.log(`     –ü–æ—Ä–∞–¥–∏: ${validation.suggestions.join('; ')}`);
    }
  }

  // 1. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –æ–±—Ä–æ–±–∫–∏ –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –∑–∞–ø–∏—Ç—É
  console.log("\n1Ô∏è‚É£ –û–±—Ä–æ–±–∫–∞ –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –∑–∞–ø–∏—Ç—É:");
  const shortQueryResult = await codeSearchService.searchCode("a");
  console.log(`   –ó–∞–ø–∏—Ç: "a"`);
  console.log(`   –¢–µ—Ö–Ω—ñ—á–Ω–∏–π: ${shortQueryResult.isTechnical}`);
  console.log(`   –†–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤: ${shortQueryResult.results.length}`);
  if (shortQueryResult.warning) {
    console.log(`   –ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è: ${shortQueryResult.warning}`);
  }

  // 2. –ë–∞–∑–æ–≤–∏–π –ø–æ—à—É–∫ –ø–æ –≤—Å—ñ—Ö –∫–æ–¥–æ–≤–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—è—Ö
  console.log("\n2Ô∏è‚É£ –ó–∞–≥–∞–ª—å–Ω–∏–π –ø–æ—à—É–∫ –ø–æ –∫–æ–¥—É:");
  const generalResults = await codeSearchService.searchCode("component lifecycle", {
    limit: 5
  });
  console.log(`   –ó–Ω–∞–π–¥–µ–Ω–æ ${generalResults.results.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤:`);
  generalResults.results.forEach((result, index) => {
    console.log(`   ${index + 1}. [${result.document.technology}] ${result.document.title} (score: ${result.score.toFixed(2)})`);
  });

  // 3. –ü–æ—à—É–∫ —Ç—ñ–ª—å–∫–∏ –ø–æ Vue.js
  console.log("\n3Ô∏è‚É£ –ü–æ—à—É–∫ —Ç—ñ–ª—å–∫–∏ –ø–æ Vue.js:");
  const vueResults = await codeSearchService.searchByTechnology(
    CODE_TECHNOLOGIES.VUE, 
    "computed properties", 
    { limit: 3 }
  );
  console.log(`   –ó–Ω–∞–π–¥–µ–Ω–æ ${vueResults.results.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤:`);
  vueResults.results.forEach((result, index) => {
    console.log(`   ${index + 1}. ${result.document.title} (score: ${result.score.toFixed(2)})`);
  });

  // 4. –ü–æ—à—É–∫ —Ç—ñ–ª—å–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó
  console.log("\n4Ô∏è‚É£ –ü–æ—à—É–∫ —Ç—ñ–ª—å–∫–∏ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó:");
  const docsResults = await codeSearchService.searchCodeDocumentation("async await", {
    technologies: [CODE_TECHNOLOGIES.NODE, CODE_TECHNOLOGIES.TYPESCRIPT],
    limit: 3
  });
  console.log(`   –ó–Ω–∞–π–¥–µ–Ω–æ ${docsResults.results.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤:`);
  docsResults.results.forEach((result, index) => {
    console.log(`   ${index + 1}. [${result.document.technology}] ${result.document.title}`);
  });

  // 5. –ü–æ—à—É–∫ –ø—Ä–æ–±–ª–µ–º/issues
  console.log("\n5Ô∏è‚É£ –ü–æ—à—É–∫ –ø—Ä–æ–±–ª–µ–º —Ç–∞ issues:");
  const issuesResults = await codeSearchService.searchCodeIssues("memory leak error", {
    technologies: [CODE_TECHNOLOGIES.NODE],
    limit: 3
  });
  console.log(`   –ó–Ω–∞–π–¥–µ–Ω–æ ${issuesResults.results.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤:`);
  issuesResults.results.forEach((result, index) => {
    console.log(`   ${index + 1}. ${result.document.title} (type: ${result.document.type})`);
  });

  // 6. –ü–æ—à—É–∫ API
  console.log("\n6Ô∏è‚É£ –ü–æ—à—É–∫ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó:");
  const apiResults = await codeSearchService.searchAPI("render function", {
    technologies: [CODE_TECHNOLOGIES.VUE],
    limit: 3
  });
  console.log(`   –ó–Ω–∞–π–¥–µ–Ω–æ ${apiResults.results.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤:`);
  apiResults.results.forEach((result, index) => {
    console.log(`   ${index + 1}. ${result.document.title} (match: ${result.matchType})`);
  });

  // 7. Troubleshooting –ø–æ—à—É–∫
  console.log("\n7Ô∏è‚É£ Troubleshooting –ø–æ—à—É–∫:");
  const troubleshootResults = await codeSearchService.searchTroubleshooting("typescript compilation error", {
    technologies: [CODE_TECHNOLOGIES.TYPESCRIPT],
    limit: 3
  });
  console.log(`   –ó–Ω–∞–π–¥–µ–Ω–æ ${troubleshootResults.results.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤:`);
  troubleshootResults.results.forEach((result, index) => {
    console.log(`   ${index + 1}. ${result.document.title} (score: ${result.score.toFixed(2)})`);
  });

  // 8. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ–π
  console.log("\n8Ô∏è‚É£ –ü—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó:");
  const technologies = codeSearchService.getCodeTechnologies();
  technologies.forEach(tech => {
    console.log(`   üîπ ${tech.label} (${tech.value}) - ${tech.description}`);
  });

  // 9. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –¥–ª—è –∑–∞–ø–∏—Ç—ñ–≤
  console.log("\n9Ô∏è‚É£ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤:");
  const recommendationQueries = [
    "err",
    "component state management in vue",
    "typescript interfaces and generics"
  ];

  for (const query of recommendationQueries) {
    const recommendations = codeSearchService.getCodeSearchRecommendations(query);
    console.log(`   Query: "${query}"`);
    console.log(`   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó: ${recommendations.join(", ") || "–ù–µ–º–∞—î —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π"}`);
  }

  // 9. –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è —Å—Ç—Ä–∞—Ç–µ–≥—ñ–π –¥–ª—è –∫–æ–¥–æ–≤–æ–≥–æ –ø–æ—à—É–∫—É
  console.log("\n9Ô∏è‚É£ –û–ø—Ç–∏–º–∞–ª—å–Ω—ñ —Å—Ç—Ä–∞—Ç–µ–≥—ñ—ó –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤:");
  const queryTests = [
    "api",
    "vue component error handling with try catch",
    "node server setup"
  ];

  for (const query of queryTests) {
    const strategies = codeSearchService.getCodeOptimizedStrategies(query);
    console.log(`   "${query}" -> —Å—Ç—Ä–∞—Ç–µ–≥—ñ—ó: ${strategies.join(", ")}`);
  }

  console.log("\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!");
  await AppDataSource.destroy();
}

// –ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó
if (require.main === module) {
  demoCodeSearch().catch(error => {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó:", error);
    process.exit(1);
  });
}

export { demoCodeSearch }; 